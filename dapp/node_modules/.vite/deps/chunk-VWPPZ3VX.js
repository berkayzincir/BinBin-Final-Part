import {
  __publicField
} from "./chunk-YQGGTG5T.js";

// node_modules/@wagmi/connectors/dist/chunk-ZCAPXGBX.js
var ChainNotConfiguredForConnectorError = class extends Error {
  constructor({
    chainId,
    connectorId
  }) {
    super(`Chain "${chainId}" not configured for connector "${connectorId}".`);
    __publicField(this, "name", "ChainNotConfiguredForConnectorError");
  }
};
var ConnectorNotFoundError = class extends Error {
  constructor() {
    super(...arguments);
    __publicField(this, "name", "ConnectorNotFoundError");
    __publicField(this, "message", "Connector not found");
  }
};

// node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js
function normalizeChainId(chainId) {
  if (typeof chainId === "string")
    return Number.parseInt(
      chainId,
      chainId.trim().substring(0, 2) === "0x" ? 16 : 10
    );
  if (typeof chainId === "bigint")
    return Number(chainId);
  return chainId;
}

export {
  ChainNotConfiguredForConnectorError,
  ConnectorNotFoundError,
  normalizeChainId
};
//# sourceMappingURL=chunk-VWPPZ3VX.js.map
